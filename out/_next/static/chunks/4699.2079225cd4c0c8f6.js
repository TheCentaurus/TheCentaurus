"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4699],{40970:function(t,i,n){function s(t){return"string"===typeof t?Number.parseInt(t,"0x"===t.trim().substring(0,2)?16:10):"bigint"===typeof t?Number(t):t}n.d(i,{n:function(){return s}})},64699:function(t,i,n){n.r(i),n.d(i,{SignerConnector:function(){return d}});var s=n(25634),e=n(9525),r=n(38569),a=n(47454),h=n(40970),o=(n(68457),new WeakMap),c=new WeakMap;class d extends r.C{constructor(t){super(),(0,e._)(this,o,{writable:!0,value:void 0}),(0,e._)(this,c,{writable:!0,value:void 0}),(0,s._)(this,"onChainChanged",(t=>{const i=(0,h.n)(t),n=!this.options.chains.find((t=>t.chainId===i));this.emit("change",{chain:{id:i,unsupported:n}})})),this.options=t}async connect(t){t.chainId&&this.switchChain(t.chainId);const i=await this.getSigner();return await i.getAddress()}async disconnect(){(0,e.a)(this,o,void 0),(0,e.a)(this,c,void 0)}async getAddress(){const t=await this.getSigner();if(!t)throw new Error("No signer found");return await t.getAddress()}async isConnected(){try{return!!(await this.getAddress())}catch{return!1}}async getProvider(){return(0,e.b)(this,o)||(0,e.a)(this,o,(0,a.c$)(this.options.chain,{clientId:this.options.clientId,secretKey:this.options.secretKey})),(0,e.b)(this,o)}async getSigner(){if(!(0,e.b)(this,c)){const t=await this.getProvider();(0,e.a)(this,c,u(this.options.signer,t))}return(0,e.b)(this,c)}async switchChain(t){const i=this.options.chains.find((i=>i.chainId===t));if(!i)throw new Error(`Chain not found for chainId ${t}, please add it to the chains property when creating this wallet`);(0,e.a)(this,o,(0,a.c$)(i,{clientId:this.options.clientId,secretKey:this.options.secretKey})),(0,e.a)(this,c,u(this.options.signer,(0,e.b)(this,o))),this.onChainChanged(t)}async setupListeners(){}updateChains(t){this.options.chains=t}}function u(t,i){return i?t.connect(i):t}}}]);